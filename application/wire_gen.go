// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"os"
	"smartwallet-api/application/controllers"
	"smartwallet-api/application/services"
	"smartwallet-api/infrastructure/repositories"
)

// Injectors from wire.go:

func ProvideRabbitMQClient() controllers.RabbitMQClient {
	config := provideConfig()
	mongoDBMarketDataRepository := provideMongoDBMarketDataRepository(config)
	marketDataProcessorService := provideMarketDataProcessor(mongoDBMarketDataRepository)
	rabbitMQClient := provideRabbitMQClient(config, marketDataProcessorService)
	return rabbitMQClient
}

// wire.go:

func provideConfig() Config {
	return Config{
		RabbitMQ: RabbitMQConfig{
			ConnectionString: os.Getenv("RABBIT_CONNECTIONSTRING"),
			QueueName:        os.Getenv("MARKETDATA_QUEUE_NAME"),
		},
		MongoDB: MongoDBConfig{
			ConnectionString: os.Getenv("MONGODB_CONNECTIONSTRING"),
		},
	}
}

func provideMongoDBMarketDataRepository(c Config) repositories.MongoDBMarketDataRepository {
	return repositories.NewMongoDBMarketDataRepository(c.MongoDB.ConnectionString)
}

func provideRabbitMQClient(c Config, m services.MarketDataProcessorService) controllers.RabbitMQClient {
	return controllers.NewRabbitMQClient(c.RabbitMQ.ConnectionString, m)
}

func provideMarketDataProcessor(m repositories.MongoDBMarketDataRepository) services.MarketDataProcessorService {
	return services.NewMarketDataProcessorService(m)
}
